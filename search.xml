<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Mybatis学习笔记</title>
      <link href="/2019/07/19/mybatis/"/>
      <url>/2019/07/19/mybatis/</url>
      
        <content type="html"><![CDATA[<h2 id="mybatis学习路线"><a href="#mybatis学习路线" class="headerlink" title="mybatis学习路线"></a><center>mybatis学习路线</center></h2><blockquote><h3 id="1-mybatis入门"><a href="#1-mybatis入门" class="headerlink" title="1.mybatis入门"></a>1.mybatis入门</h3><h3 id="2-mybatis的深入和多表"><a href="#2-mybatis的深入和多表" class="headerlink" title="2.mybatis的深入和多表"></a>2.mybatis的深入和多表</h3><h3 id="3-mybaits的缓存和注解开发"><a href="#3-mybaits的缓存和注解开发" class="headerlink" title="3.mybaits的缓存和注解开发"></a>3.mybaits的缓存和注解开发</h3></blockquote><a id="more"></a><h4 id="1-1-mybatis入门"><a href="#1-1-mybatis入门" class="headerlink" title="1.1. mybatis入门"></a><center>1.1. mybatis入门</center></h4><h5 id="1-1-1-什么是框架？"><a href="#1-1-1-什么是框架？" class="headerlink" title="1.1.1. 什么是框架？"></a>1.1.1. 什么是框架？</h5><blockquote><p>   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;框架是我们软件开发中的一套解决方案，不同的框架解决的是不同的问题。<br>使用框架的好处：框架封装了很多的细节，使开发者可以使用极简的方式实现功能。大大提高开发效率。</p></blockquote><h5 id="1-1-2-三层架构"><a href="#1-1-2-三层架构" class="headerlink" title="1.1.2. 三层架构"></a>1.1.2. 三层架构</h5><p><img src="/img/mybatis/%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84.png" alt="三层架构"></p><blockquote><p>表现层：是用于展示数据的<br>  业务层：是处理业务需求<br>  持久层：是和数据库交互的</p></blockquote><h5 id="1-1-3-持久层技术解决方案"><a href="#1-1-3-持久层技术解决方案" class="headerlink" title="1.1.3. 持久层技术解决方案"></a>1.1.3. 持久层技术解决方案</h5><blockquote><p>JDBC技术：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Connection<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PreparedStatement<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ResultSet<br>Spring的JdbcTemplate：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Spring中对jdbc的简单封装<br>Apache的DBUtils：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;它和Spring的JdbcTemplate很像，也是对Jdbc的简单封装 <br><br>以上这些都不是框架<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JDBC是规范<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Spring的JdbcTemplate和Apache的DBUtils都只是工具类</p></blockquote><h5 id="1-1-4-mybatis的概述"><a href="#1-1-4-mybatis的概述" class="headerlink" title="1.1.4. mybatis的概述"></a>1.1.4. mybatis的概述</h5><blockquote><p> mybatis是一个用java编写的持久层框架。<br>它封装了jdbc操作的很多细节，使开发者只需要关注sql语句本身，而无需关注注册驱动，创建连接等繁杂过程<br>它使用了ORM思想实现了结果集的封装。<br>ORM：Object Relational Mappging 对象关系映射<br>简单的说：就是把数据库表和实体类及实体类的属性对应起来，让我们可以操作实体类就实现操作数据库表。</p></blockquote><table><thead><tr><th>数据表</th><th>实体类</th></tr></thead><tbody><tr><td>user</td><td>User</td></tr><tr><td>id</td><td>userId</td></tr><tr><td>user_name</td><td>userName</td></tr></tbody></table><h5 id="1-1-5-mybatis的入门"><a href="#1-1-5-mybatis的入门" class="headerlink" title="1.1.5. mybatis的入门"></a>1.1.5. mybatis的入门</h5><blockquote><p>mybatis的环境搭建<br>        第一步：创建maven工程并导入坐标<br>        第二步：创建实体类和dao的接口<br>        第三步：创建Mybatis的主配置文件<br>                SqlMapConifg.xml<br>        第四步：创建映射配置文件<br>                UserDao.xml</p></blockquote><blockquote><p>   环境搭建的注意事项：<br>        第一个：创建UserDao.xml 和 UserDao.java时名称是为了和我们之前的知识保持一致。<br>            在Mybatis中它把持久层的操作接口名称和映射文件也叫做：Mapper<br>            所以：UserDao 和 UserMapper是一样的<br>        第二个：在idea中创建目录的时候，它和包是不一样的<br>            包在创建时：com.cwg.dao它是三级结构<br>            目录在创建时：com.cwg.dao是一级目录<br>        第三个：mybatis的映射配置文件位置必须和dao接口的包结构相同<br>        第四个：映射配置文件的mapper标签namespace属性的取值必须是dao接口的全限定类名<br>        第五个：映射配置文件的操作配置（select），id属性的取值必须是dao接口的方法名<br>    当我们遵从了第三，四，五点之后，我们在开发中就无须再写dao的实现类。</p></blockquote><blockquote><p>   mybatis的入门案例<br>        第一步：读取配置文件<br>        第二步：创建SqlSessionFactory工厂<br>        第三步：创建SqlSession<br>        第四步：创建Dao接口的代理对象<br>        第五步：执行dao中的方法<br>        第六步：释放资源<br>        注意事项：<br>            不要忘记在映射配置中告知mybatis要封装到哪个实体类中<br>            配置的方式：指定实体类的全限定类名<br>        mybatis基于注解的入门案例：<br>            把UserDao.xml移除，在dao接口的方法上使用@Select注解，并且指定SQL语句<br>            同时需要在SqlMapConfig.xml中的mapper配置时，使用class属性指定dao接口的全限定类名。</p></blockquote><blockquote><p>   明确：<br>        我们在实际开发中，都是越简便越好，所以都是采用不写dao实现类的方式。<br>        不管使用XML还是注解配置。<br>        但是Mybatis它是支持写dao实现类的。</p></blockquote><h5 id="1-1-6-代码示例"><a href="#1-1-6-代码示例" class="headerlink" title="1.1.6. 代码示例"></a>1.1.6. 代码示例</h5><blockquote><p>maven坐标</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.cwg<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis01<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.15<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>sql脚本</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`user`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`user`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> auto_increment,</span><br><span class="line">  <span class="string">`username`</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'用户名称'</span>,</span><br><span class="line">  <span class="string">`birthday`</span> datetime <span class="keyword">default</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'生日'</span>,</span><br><span class="line">  <span class="string">`sex`</span> <span class="built_in">char</span>(<span class="number">1</span>) <span class="keyword">default</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'性别'</span>,</span><br><span class="line">  <span class="string">`address`</span> <span class="built_in">varchar</span>(<span class="number">256</span>) <span class="keyword">default</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'地址'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span>  (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span>  <span class="keyword">into</span> <span class="string">`user`</span>(<span class="string">`username`</span>,<span class="string">`birthday`</span>,<span class="string">`sex`</span>,<span class="string">`address`</span>) <span class="keyword">values</span> (<span class="string">'张三'</span>,<span class="literal">null</span>,<span class="string">'男'</span>,<span class="string">'北京'</span>),(<span class="string">'李妍'</span>,<span class="literal">null</span>,<span class="string">'女'</span>,<span class="string">'上海'</span>),(<span class="string">'小二王'</span>,<span class="string">'2018-03-04 11:34:34'</span>,<span class="string">'女'</span>,<span class="string">'北京金燕龙'</span>),(<span class="string">'赵子龙'</span>,<span class="literal">null</span>,<span class="string">'男'</span>,<span class="string">'深圳'</span>),(<span class="string">'老王'</span>,<span class="string">'2018-03-07 17:37:26'</span>,<span class="string">'男'</span>,<span class="string">'北京'</span>),(<span class="string">'马莉'</span>,<span class="literal">null</span>,<span class="string">'女'</span>,<span class="string">'重庆'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`account`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`account`</span> (</span><br><span class="line">  <span class="string">`ID`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'编号'</span>,</span><br><span class="line">  <span class="string">`UID`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">default</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'用户编号'</span>,</span><br><span class="line">  <span class="string">`MONEY`</span> <span class="keyword">double</span> <span class="keyword">default</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'金额'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span>  (<span class="string">`ID`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`FK_Reference_8`</span> (<span class="string">`UID`</span>),</span><br><span class="line">  <span class="keyword">CONSTRAINT</span> <span class="string">`FK_Reference_8`</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (<span class="string">`UID`</span>) <span class="keyword">REFERENCES</span> <span class="string">`user`</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span>  <span class="keyword">into</span> <span class="string">`account`</span>(<span class="string">`ID`</span>,<span class="string">`UID`</span>,<span class="string">`MONEY`</span>) <span class="keyword">values</span> (<span class="number">1</span>,<span class="number">1</span>,<span class="number">1000</span>),(<span class="number">2</span>,<span class="number">2</span>,<span class="number">1000</span>),(<span class="number">3</span>,<span class="number">3</span>,<span class="number">2000</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`role`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`role`</span> (</span><br><span class="line">  <span class="string">`ID`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'编号'</span>,</span><br><span class="line">  <span class="string">`ROLE_NAME`</span> <span class="built_in">varchar</span>(<span class="number">30</span>) <span class="keyword">default</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'角色名称'</span>,</span><br><span class="line">  <span class="string">`ROLE_DESC`</span> <span class="built_in">varchar</span>(<span class="number">60</span>) <span class="keyword">default</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'角色描述'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span>  (<span class="string">`ID`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span>  <span class="keyword">into</span> <span class="string">`role`</span>(<span class="string">`ID`</span>,<span class="string">`ROLE_NAME`</span>,<span class="string">`ROLE_DESC`</span>) <span class="keyword">values</span> (<span class="number">1</span>,<span class="string">'院长'</span>,<span class="string">'管理整个学院'</span>),(<span class="number">2</span>,<span class="string">'总裁'</span>,<span class="string">'管理整个公司'</span>),(<span class="number">3</span>,<span class="string">'校长'</span>,<span class="string">'管理整个学校'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`user_role`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`user_role`</span> (</span><br><span class="line">  <span class="string">`UID`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'用户编号'</span>,</span><br><span class="line">  <span class="string">`RID`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'角色编号'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span>  (<span class="string">`UID`</span>,<span class="string">`RID`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`FK_Reference_10`</span> (<span class="string">`RID`</span>),</span><br><span class="line">  <span class="keyword">CONSTRAINT</span> <span class="string">`FK_Reference_10`</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (<span class="string">`RID`</span>) <span class="keyword">REFERENCES</span> <span class="string">`role`</span> (<span class="string">`ID`</span>),</span><br><span class="line">  <span class="keyword">CONSTRAINT</span> <span class="string">`FK_Reference_9`</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (<span class="string">`UID`</span>) <span class="keyword">REFERENCES</span> <span class="string">`user`</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span>  <span class="keyword">into</span> <span class="string">`user_role`</span>(<span class="string">`UID`</span>,<span class="string">`RID`</span>) <span class="keyword">values</span> (<span class="number">1</span>,<span class="number">1</span>),(<span class="number">2</span>,<span class="number">1</span>),(<span class="number">3</span>,<span class="number">2</span>);</span><br></pre></td></tr></table></figure><blockquote><p>mybatis的核心配置文件sqlMapConfig.xml</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE configuration</span></span><br><span class="line"><span class="meta">        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"</span></span><br><span class="line"><span class="meta">        "http://mybatis.org/dtd/mybatis-3-config.dtd"&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- mybatis的主配置文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置环境 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 配置mysql的环境 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 配置事务类型 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>&gt;</span><span class="tag">&lt;/<span class="name">transactionManager</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 配置数据源，也叫连接池 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 配置连接数据库的四个基本信息 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"com.mysql.cj.jdbc.Driver"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"jdbc:mysql://localhost:3306/mybatis?useUnicode=true&amp;amp;characterEncoding=utf8&amp;amp;serverTimezone=GMT%2B8&amp;amp;useSSL=false"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"wqnmlgb"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 指定的映射文件的位置，映射配置文件指的是每个dao独立的配置文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"com/cwg/dao/UserDao.xml"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 使用注解方式 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    &lt;mappers&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;mapper class="com.cwg.dao.UserDao" /&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    &lt;/mappers&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>UserDao接口与其相应的配置文件</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cwg.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cwg.domain.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.ResultMap;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Select;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> MyLei</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/7/18</span></span><br><span class="line"><span class="comment"> * 用户的持久层接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询所有操作</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">findAll</span> <span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据传入参数条件查询</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> user 查询的条件：user具体哪些值不为空并不确定</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">findUserByCondition</span> <span class="params">(User user)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">saveUser</span><span class="params">(User user)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">----------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span> ?&gt;</span><br><span class="line">&lt;!DOCTYPE mapper</span><br><span class="line">        PUBLIC <span class="string">"-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line">        <span class="string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span><br><span class="line">&lt;mapper namespace=<span class="string">"com.cwg.dao.UserDao"</span>&gt;</span><br><span class="line">    &lt;!-- 配置查询所有 --&gt;</span><br><span class="line">    &lt;select id=<span class="string">"findAll"</span> resultType=<span class="string">"com.cwg.domain.User"</span>&gt;</span><br><span class="line">        select * from user</span><br><span class="line">    &lt;/select&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 根据条件查询 --&gt;</span><br><span class="line">    &lt;select id=<span class="string">"findUserByCondition"</span> parameterType=<span class="string">"com.cwg.domain.User"</span> resultType=<span class="string">"com.cwg.domain.User"</span>&gt;</span><br><span class="line">        select * from user</span><br><span class="line">        &lt;where&gt;</span><br><span class="line">            &lt;<span class="keyword">if</span> test=<span class="string">"username != null"</span>&gt;</span><br><span class="line">                and username = #&#123;username&#125;</span><br><span class="line">            &lt;/if&gt;</span><br><span class="line">            &lt;<span class="keyword">if</span> test=<span class="string">"sex != null"</span>&gt;</span><br><span class="line">                and sex = #&#123;sex&#125;</span><br><span class="line">            &lt;/if&gt;</span><br><span class="line">        &lt;/where&gt;</span><br><span class="line">    &lt;/select&gt;</span><br><span class="line"></span><br><span class="line">    &lt;insert id=<span class="string">"saveUser"</span> parameterType=<span class="string">"com.cwg.domain.User"</span>&gt;</span><br><span class="line">        <span class="function">insert into <span class="title">user</span> <span class="params">(id,username,sex,birthday)</span> <span class="title">values</span> <span class="params">(#&#123;id&#125;,#&#123;username&#125;,#&#123;sex&#125;,#&#123;birthday&#125;)</span></span></span><br><span class="line"><span class="function">    &lt;/insert&gt;</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">&lt;/mapper&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>测试类</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cwg.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cwg.dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> com.cwg.domain.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"><span class="keyword">import</span> org.junit.After;</span><br><span class="line"><span class="keyword">import</span> org.junit.Before;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> MyLei</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/7/18</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MybatisTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> InputStream in;</span><br><span class="line">    <span class="keyword">private</span> SqlSession session;</span><br><span class="line">    <span class="keyword">private</span> UserDao mapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span> <span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//1. 读取配置文件</span></span><br><span class="line"></span><br><span class="line">        in = Resources.getResourceAsStream(<span class="string">"sqlMapConfig.xml"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2. 创建SqlSessionFactory工厂</span></span><br><span class="line"></span><br><span class="line">        SqlSessionFactory sf = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3. 使用工厂生产一个SqlSession对象,此处参数为true代表事务自动提交</span></span><br><span class="line"></span><br><span class="line">        session = sf.openSession(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4. 使用SqlSession创建Dao接口的代理对象</span></span><br><span class="line"></span><br><span class="line">        mapper = session.getMapper(UserDao.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@After</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line"><span class="comment">//        session.commit();</span></span><br><span class="line">        <span class="comment">// 释放资源</span></span><br><span class="line">        session.close();</span><br><span class="line">        in.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 测试查询所有</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">testFindAll</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line"></span><br><span class="line">        List&lt;User&gt; users = mapper.findAll();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (User user : users) &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 测试保存方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSave</span> <span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line"></span><br><span class="line">        User user = <span class="keyword">new</span> User ();</span><br><span class="line">        user.setSex(<span class="string">"1"</span>);</span><br><span class="line">        user.setUsername(<span class="string">"龙智55"</span>);</span><br><span class="line">        user.setBirthday(<span class="keyword">new</span> Date());</span><br><span class="line">        user.setAddress(<span class="string">"云南师范大学"</span>);</span><br><span class="line">        mapper.saveUser(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 测试查询所有</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">testFindCondition</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line"></span><br><span class="line">        User u = <span class="keyword">new</span> User();</span><br><span class="line"><span class="comment">//        u.setUsername(null);</span></span><br><span class="line">        u.setUsername(<span class="string">"蔡万刚"</span>);</span><br><span class="line">        u.setSex(<span class="string">"1"</span>);</span><br><span class="line"></span><br><span class="line">        List&lt;User&gt; users = mapper.findUserByCondition(u);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (User user : users) &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-mybatis的深入和多表-1"><a href="#2-mybatis的深入和多表-1" class="headerlink" title="2. mybatis的深入和多表"></a><center>2. mybatis的深入和多表</center></h4><h5 id="2-1-mybatis的相关概念"><a href="#2-1-mybatis的相关概念" class="headerlink" title="2.1. mybatis的相关概念"></a>2.1. mybatis的相关概念</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"> 1、连接池：</span><br><span class="line">我们在实际开发中都会使用连接池。</span><br><span class="line">因为它可以减少我们获取连接所消耗的时间。</span><br><span class="line">2、mybatis中的连接池</span><br><span class="line">mybatis连接池提供了3种方式的配置：</span><br><span class="line">配置的位置：</span><br><span class="line">主配置文件SqlMapConfig.xml中的dataSource标签，type属性就是表示采用何种连接池方式。</span><br><span class="line">type属性的取值：</span><br><span class="line">POOLED 采用传统的javax.sql.DataSource规范中的连接池，mybatis中有针对规范的实现</span><br><span class="line">UNPOOLED 采用传统的获取连接的方式，虽然也实现Javax.sql.DataSource接口，但是并没有使用池的思想。</span><br><span class="line">JNDI 采用服务器提供的JNDI技术实现，来获取DataSource对象，不同的服务器所能拿到DataSource是不一样。</span><br><span class="line"> 注意：如果不是web或者maven的war工程，是不能使用的。</span><br><span class="line"> 我们课程中使用的是tomcat服务器，采用连接池就是dbcp连接池。</span><br><span class="line">3、mybatis中的事务</span><br><span class="line">什么是事务</span><br><span class="line">事务的四大特性ACID</span><br><span class="line">不考虑隔离性会产生的3个问题：脏读、幻读、不可重复度</span><br><span class="line">解决办法：四种隔离级别</span><br><span class="line">它是通过sqlsession对象的commit方法和rollback方法实现事务的提交和回滚 </span><br><span class="line">4、mybatis中的多表查询</span><br><span class="line">表之间的关系有几种：</span><br><span class="line">一对多</span><br><span class="line">多对一</span><br><span class="line">一对一</span><br><span class="line">多对多</span><br><span class="line">举例：</span><br><span class="line">用户和订单就是一对多</span><br><span class="line">订单和用户就是多对一</span><br><span class="line">一个用户可以下多个订单</span><br><span class="line">多个订单属于同一个用户</span><br><span class="line">人和身份证号就是一对一</span><br><span class="line">一个人只能有一个身份证号</span><br><span class="line">一个身份证号只能属于一个人</span><br><span class="line">老师和学生之间就是多对多</span><br><span class="line">一个学生可以被多个老师教过</span><br><span class="line">一个老师可以交多个学生</span><br><span class="line">特例：</span><br><span class="line">如果拿出每一个订单，他都只能属于一个用户。</span><br><span class="line">所以Mybatis就把多对一看成了一对一。 </span><br><span class="line">mybatis中的多表查询：</span><br><span class="line">示例：用户和账户</span><br><span class="line">一个用户可以有多个账户</span><br><span class="line">一个账户只能属于一个用户（多个账户也可以属于同一个用户）</span><br><span class="line">步骤：</span><br><span class="line">1、建立两张表：用户表，账户表</span><br><span class="line">让用户表和账户表之间具备一对多的关系：需要使用外键在账户表中添加 </span><br><span class="line">2、建立两个实体类：用户实体类和账户实体类</span><br><span class="line">让用户和账户的实体类能体现出来一对多的关系 </span><br><span class="line">3、建立两个配置文件</span><br><span class="line">用户的配置文件</span><br><span class="line">账户的配置文件 </span><br><span class="line">4、实现配置：</span><br><span class="line">当我们查询用户时，可以同时得到用户下所包含的账户信息</span><br><span class="line">当我们查询账户时，可以同时得到账户的所属用户信息 </span><br><span class="line">示例：用户和角色</span><br><span class="line">一个用户可以有多个角色</span><br><span class="line">一个角色可以赋予多个用户</span><br><span class="line">步骤：</span><br><span class="line">1、建立两张表：用户表，角色表</span><br><span class="line">让用户表和角色表具有多对多的关系。需要使用中间表，中间表中包含各自的主键，在中间表中是外键。</span><br><span class="line">2、建立两个实体类：用户实体类和角色实体类</span><br><span class="line">让用户和角色的实体类能体现出来多对多的关系</span><br><span class="line">各自包含对方一个集合引用</span><br><span class="line">3、建立两个配置文件</span><br><span class="line">用户的配置文件</span><br><span class="line">角色的配置文件</span><br><span class="line">4、实现配置：</span><br><span class="line">当我们查询用户时，可以同时得到用户所包含的角色信息</span><br><span class="line">当我们查询角色时，可以同时得到角色的所赋予的用户信息</span><br></pre></td></tr></table></figure><h5 id="2-2-代码示例"><a href="#2-2-代码示例" class="headerlink" title="2.2. 代码示例"></a>2.2. 代码示例</h5><blockquote><p>角色相关接口与配置文件</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cwg.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cwg.domain.Role;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> MyLei</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/7/18</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RoleDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询所有角色，同时给出所下属的所有用户信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;Role&gt; <span class="title">findAll</span> <span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span> ?&gt;</span><br><span class="line">&lt;!DOCTYPE mapper</span><br><span class="line">        PUBLIC <span class="string">"-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line">        <span class="string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span><br><span class="line">&lt;mapper namespace=<span class="string">"com.cwg.dao.RoleDao"</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 定义role表的resultMap --&gt;</span><br><span class="line">    &lt;resultMap id=<span class="string">"roleMap"</span> type=<span class="string">"Role"</span>&gt;</span><br><span class="line">        &lt;id column="rid" property="id"&gt;&lt;/id&gt;</span><br><span class="line">        &lt;result column="role_name" property="roleName"&gt;&lt;/result&gt;</span><br><span class="line">        &lt;result column="role_desc" property="roleDesc"&gt;&lt;/result&gt;</span><br><span class="line">        &lt;collection property=<span class="string">"users"</span> ofType=<span class="string">"User"</span>&gt;</span><br><span class="line">            &lt;id property="id" column="id"&gt;&lt;/id&gt;</span><br><span class="line">            &lt;result column=<span class="string">"username"</span> property=<span class="string">"username"</span> /&gt;</span><br><span class="line">            &lt;result column=<span class="string">"address"</span> property=<span class="string">"address"</span> /&gt;</span><br><span class="line">            &lt;result column=<span class="string">"sex"</span> property=<span class="string">"sex"</span> /&gt;</span><br><span class="line">            &lt;result column=<span class="string">"birthday"</span> property=<span class="string">"birthday"</span> /&gt;</span><br><span class="line">        &lt;/collection&gt;</span><br><span class="line">    &lt;/resultMap&gt;</span><br><span class="line"></span><br><span class="line">    &lt;select id=<span class="string">"findAll"</span> resultMap=<span class="string">"roleMap"</span>&gt;</span><br><span class="line">        select u.*,r.id as rid,r.role_name,r.role_desc from role r</span><br><span class="line">        left join user_role ur on r.id = ur.rid</span><br><span class="line">        left join user u on u.id = ur.rid</span><br><span class="line">    &lt;/select&gt;</span><br><span class="line">&lt;/mapper&gt;</span><br></pre></td></tr></table></figure><blockquote><p>用户相关接口与配置文件</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cwg.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cwg.domain.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.ResultMap;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Select;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> MyLei</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/7/18</span></span><br><span class="line"><span class="comment"> * 用户的持久层接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询所有用户，同时获取到用户下所有账户的信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">findAll</span> <span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据传入参数条件查询</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">findUserById</span> <span class="params">(Integer id)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span> ?&gt;</span><br><span class="line">&lt;!DOCTYPE mapper</span><br><span class="line">        PUBLIC <span class="string">"-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line">        <span class="string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span><br><span class="line">&lt;mapper namespace=<span class="string">"com.cwg.dao.UserDao"</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 配置查询所有 --&gt;</span><br><span class="line">    &lt;select id=<span class="string">"findAll"</span> resultType=<span class="string">"user"</span>&gt;</span><br><span class="line">        select * from user u left join account a on u.id = a.uid</span><br><span class="line">    &lt;/select&gt;</span><br><span class="line"></span><br><span class="line">    &lt;select id=<span class="string">"findUserById"</span> parameterType=<span class="string">"Integer"</span> resultType=<span class="string">"User"</span>&gt;</span><br><span class="line">        select * from user where id = #&#123;va&#125;</span><br><span class="line">    &lt;/select&gt;</span><br><span class="line"></span><br><span class="line">&lt;/mapper&gt;</span><br></pre></td></tr></table></figure><blockquote><p>测试类</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cwg.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cwg.dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> com.cwg.domain.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"><span class="keyword">import</span> org.junit.After;</span><br><span class="line"><span class="keyword">import</span> org.junit.Before;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> MyLei</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/7/18</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserTest</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> InputStream in;</span><br><span class="line">    <span class="keyword">private</span> SqlSession session;</span><br><span class="line">    <span class="keyword">private</span> UserDao mapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span> <span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//1. 读取配置文件</span></span><br><span class="line"></span><br><span class="line">        in = Resources.getResourceAsStream(<span class="string">"sqlMapConfig.xml"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2. 创建SqlSessionFactory工厂</span></span><br><span class="line"></span><br><span class="line">        SqlSessionFactory sf = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3. 使用工厂生产一个SqlSession对象,此处参数为true代表事务自动提交</span></span><br><span class="line"></span><br><span class="line">        session = sf.openSession(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4. 使用SqlSession创建Dao接口的代理对象</span></span><br><span class="line"></span><br><span class="line">        mapper = session.getMapper(UserDao.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@After</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line"><span class="comment">//        session.commit();</span></span><br><span class="line">        <span class="comment">// 释放资源</span></span><br><span class="line">        session.close();</span><br><span class="line">        in.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAll</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        List&lt;User&gt; users = mapper.findAll();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (User user : users) &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.cwg.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cwg.dao.RoleDao;</span><br><span class="line"><span class="keyword">import</span> com.cwg.dao.RoleDao;</span><br><span class="line"><span class="keyword">import</span> com.cwg.domain.Role;</span><br><span class="line"><span class="keyword">import</span> com.cwg.domain.Role;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"><span class="keyword">import</span> org.junit.After;</span><br><span class="line"><span class="keyword">import</span> org.junit.Before;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> MyLei</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/7/18</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RoleTest</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> InputStream in;</span><br><span class="line">    <span class="keyword">private</span> SqlSession session;</span><br><span class="line">    <span class="keyword">private</span> RoleDao mapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span> <span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//1. 读取配置文件</span></span><br><span class="line"></span><br><span class="line">        in = Resources.getResourceAsStream(<span class="string">"sqlMapConfig.xml"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2. 创建SqlSessionFactory工厂</span></span><br><span class="line"></span><br><span class="line">        SqlSessionFactory sf = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3. 使用工厂生产一个SqlSession对象,此处参数为true代表事务自动提交</span></span><br><span class="line"></span><br><span class="line">        session = sf.openSession(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4. 使用SqlSession创建Dao接口的代理对象</span></span><br><span class="line"></span><br><span class="line">        mapper = session.getMapper(RoleDao.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@After</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line"><span class="comment">//        session.commit();</span></span><br><span class="line">        <span class="comment">// 释放资源</span></span><br><span class="line">        session.close();</span><br><span class="line">        in.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAll</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        List&lt;Role&gt; roles = mapper.findAll();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Role role : roles) &#123;</span><br><span class="line">            System.out.println(role);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-mybaits的缓存和注解开发-1"><a href="#3-mybaits的缓存和注解开发-1" class="headerlink" title="3. mybaits的缓存和注解开发"></a><center>3. mybaits的缓存和注解开发</center></h4><h5 id="3-1-mybatis中的延迟加载"><a href="#3-1-mybatis中的延迟加载" class="headerlink" title="3.1. mybatis中的延迟加载"></a>3.1. mybatis中的延迟加载</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">问题：在一对多中，当我们有一个用户，它有100个账户。</span><br><span class="line">      在查询用户的时候，要不要把关联的账户查出来？</span><br><span class="line">      在查询账户的时候，要不要把关联的用户查出来？ </span><br><span class="line">      在查询用户时，用户下的账户信息应该是，什么时候使用，什么时候查询的。</span><br><span class="line">      在查询账户时，账户的所属用户信息应该是随着账户查询时一起查询出来。</span><br><span class="line">什么是延迟加载</span><br><span class="line">在真正使用数据时才发起查询，不用的时候不查询。按需加载（懒加载）</span><br><span class="line">什么是立即加载</span><br><span class="line">不管用不用，只要一调用方法，马上发起查询。</span><br><span class="line">在对应的四种表关系中：一对多，多对一，一对一，多对多</span><br><span class="line">一对多，多对多：通常情况下我们都是采用延迟加载。</span><br><span class="line">多对一，一对一：通常情况下我们都是采用立即加载。</span><br></pre></td></tr></table></figure><h5 id="3-2-mybatis中的缓存"><a href="#3-2-mybatis中的缓存" class="headerlink" title="3.2. mybatis中的缓存"></a>3.2. mybatis中的缓存</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">什么是缓存</span><br><span class="line">存在于内存中的临时数据。</span><br><span class="line">为什么使用缓存</span><br><span class="line">减少和数据库的交互次数，提高执行效率。</span><br><span class="line">什么样的数据能使用缓存，什么样的数据不能使用</span><br><span class="line">适用于缓存：</span><br><span class="line">经常查询并且不经常改变的。</span><br><span class="line">数据的正确与否对最终结果影响不大的。</span><br><span class="line">不适用于缓存：</span><br><span class="line">经常改变的数据</span><br><span class="line">数据的正确与否对最终结果影响很大的。</span><br><span class="line">例如：商品的库存，银行的汇率，股市的牌价。</span><br><span class="line">Mybatis中的一级缓存和二级缓存</span><br><span class="line">一级缓存：</span><br><span class="line">它指的是Mybatis中SqlSession对象的缓存。</span><br><span class="line">当我们执行查询之后，查询的结果会同时存入到SqlSession为我们提供一块区域中。</span><br><span class="line">该区域的结构是一个Map。当我们再次查询同样的数据，mybatis会先去sqlsession中</span><br><span class="line">查询是否有，有的话直接拿出来用。</span><br><span class="line">当SqlSession对象消失时，mybatis的一级缓存也就消失了。</span><br><span class="line"></span><br><span class="line">二级缓存:</span><br><span class="line">它指的是Mybatis中SqlSessionFactory对象的缓存。由同一个SqlSessionFactory对象创建的SqlSession共享其缓存。</span><br><span class="line">二级缓存的使用步骤：</span><br><span class="line">第一步：让Mybatis框架支持二级缓存（在SqlMapConfig.xml中配置）</span><br><span class="line">第二步：让当前的映射文件支持二级缓存（在IUserDao.xml中配置）</span><br><span class="line">第三步：让当前的操作支持二级缓存（在select标签中配置）</span><br></pre></td></tr></table></figure><h5 id="3-3-mybatis中的注解开发"><a href="#3-3-mybatis中的注解开发" class="headerlink" title="3.3. mybatis中的注解开发"></a>3.3. mybatis中的注解开发</h5><blockquote><p>示例代码</p></blockquote><blockquote><p>mybatis核心配置文件sqlMapConfig.xml</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE configuration</span></span><br><span class="line"><span class="meta">        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"</span></span><br><span class="line"><span class="meta">        "http://mybatis.org/dtd/mybatis-3-config.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入外部属性文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">"jdbc.properties"</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 设置别名 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"com.cwg.domain"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>&gt;</span><span class="tag">&lt;/<span class="name">transactionManager</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.driver&#125;"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.url&#125;"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.username&#125;"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.password&#125;"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 指定带有注解的dao接口的所在位置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"com.cwg.dao"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>用户持久层接口UserDao</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cwg.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cwg.domain.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Delete;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Insert;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Select;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Update;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> MyLei</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/7/18</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询所有用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * mybatis针对CRUD的注解一共有四个</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Select</span>、<span class="doctag">@Update</span>、<span class="doctag">@Insert</span>、<span class="doctag">@Delete</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"select * from user"</span>)</span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">findAll</span> <span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> user 要保存的用户信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Insert</span>(<span class="string">"insert into user(username,address,sex,birthday) values(#&#123;username&#125;,#&#123;address&#125;,#&#123;sex&#125;,#&#123;birthday&#125;)"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">saveUser</span> <span class="params">(User user)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 修改用户信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> user</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Update</span>(<span class="string">"update user set username = #&#123;username&#125;,address = #&#123;address&#125;,sex = #&#123;sex&#125;,birthday = #&#123;birthday&#125; where id = #&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">updateUser</span> <span class="params">(User user)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过id删除用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Delete</span>(<span class="string">"delete from user where id = #&#123;value&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">deleteUser</span> <span class="params">(Integer id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过id查找用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"select * from user where id = #&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function">User <span class="title">findUser</span> <span class="params">(Integer id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 模糊查询</span></span><br><span class="line"><span class="comment">     * #&#123;&#125;:占位符</span></span><br><span class="line"><span class="comment">     *      <span class="doctag">@Select</span>("select * from user where username like \"%\"#&#123;username&#125;\"%\"")</span></span><br><span class="line"><span class="comment">     * $&#123;&#125;:字符串拼接</span></span><br><span class="line"><span class="comment">     *      <span class="doctag">@Select</span>("select * from user where username like '%$&#123;value&#125;%'")</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> username</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"select * from user where username like '%$&#123;value&#125;%'"</span>)</span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">findLike</span> <span class="params">(String username)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 统计查询用户总数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"select count(*) from user"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">findTotalUser</span> <span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>测试类</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cwg.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cwg.dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> com.cwg.domain.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"><span class="keyword">import</span> org.junit.After;</span><br><span class="line"><span class="keyword">import</span> org.junit.Before;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> MyLei</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/7/18</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AnnotaionTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> InputStream in;</span><br><span class="line">    <span class="keyword">private</span> SqlSession session;</span><br><span class="line">    <span class="keyword">private</span> UserDao mapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span> <span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        in = Resources.getResourceAsStream(<span class="string">"sqlMapConfig.xml"</span>);</span><br><span class="line">        SqlSessionFactory sf = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in);</span><br><span class="line">        session = sf.openSession();</span><br><span class="line">        mapper = session.getMapper(UserDao.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@After</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span> <span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        session.commit();</span><br><span class="line">        session.close();</span><br><span class="line">        in.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSave</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setUsername(<span class="string">"周耀宗"</span>);</span><br><span class="line">        user.setSex(<span class="string">"1"</span>);</span><br><span class="line">        user.setAddress(<span class="string">"E1-415"</span>);</span><br><span class="line">        user.setBirthday(<span class="keyword">new</span> Date());</span><br><span class="line">        mapper.saveUser(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUpdate</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        User user = <span class="keyword">new</span> User ();</span><br><span class="line">        user.setId(<span class="number">30</span>);</span><br><span class="line">        user.setUsername(<span class="string">"董文斌"</span>);</span><br><span class="line">        user.setSex(<span class="string">"2"</span>);</span><br><span class="line">        user.setBirthday(<span class="keyword">new</span> Date());</span><br><span class="line">        user.setAddress(<span class="string">"E1-415"</span>);</span><br><span class="line">        mapper.updateUser(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDelete</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        Integer id = <span class="number">26</span>;</span><br><span class="line">        mapper.deleteUser(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFind</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        User user = mapper.findUser(<span class="number">31</span>);</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testLike</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        List&lt;User&gt; users = mapper.findLike(<span class="string">"小"</span>);</span><br><span class="line">        <span class="keyword">for</span> (User user : users) &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testTotal</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(mapper.findTotalUser());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>One algorithm question per day</title>
      <link href="/2019/07/16/algorithm/"/>
      <url>/2019/07/16/algorithm/</url>
      
        <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a><center>Introduction</center></h2><blockquote><p>  This blog is mainly used to record the process of learning algorithms in depth. The main programming languages are C, C++, Java, welcome to communicate actively, and my contact information on the right.</p></blockquote><a id="more"></a><h2 id="1-递归、分治"><a href="#1-递归、分治" class="headerlink" title="1. 递归、分治"></a><center>1. 递归、分治</center></h2><h3 id="1-1-字典序问题"><a href="#1-1-字典序问题" class="headerlink" title="1.1 字典序问题"></a>1.1 字典序问题</h3><details><summary><mark><font color="darkred">查看详情</font></mark></summary><h4 id="1-1-1-问题描述"><a href="#1-1-1-问题描述" class="headerlink" title="1.1.1 问题描述"></a>1.1.1 问题描述</h4><blockquote><p>在数据加密和数据压缩中常需要对特殊的字符串进行编码。给定的字母表A由26个小写字母组成A={a,b,…,z}。该字母表产生的升序字符串是指字符串中字母从左到右出现的次序与字母在字母表中出现的次序相同，且每个字符最多出现1次。例如，a,b,ab,bc,xyz等字符串都是升序字符串。现在对字母表A产生的所有长度不超过6的升序字符串按照字典序排列并编码如下。</p></blockquote><table><thead><tr><th align="center">1</th><th align="center">2</th><th align="center">…</th><th align="center">26</th><th align="center">27</th><th align="center">28</th><th align="center">…</th></tr></thead><tbody><tr><td align="center">a</td><td align="center">b</td><td align="center">…</td><td align="center">z</td><td align="center">ab</td><td align="center">ac</td><td align="center">…</td></tr></tbody></table><blockquote><p>  对于任意长度不超过6的升序字符串，迅速计算出它在上述字典中的编码。</p></blockquote><h4 id="1-1-2-数据输入"><a href="#1-1-2-数据输入" class="headerlink" title="1.1.2 数据输入"></a>1.1.2 数据输入</h4><blockquote><p>  输入数据由文件名为input.txt的文本文件提供。文件的第1行是一个正整数k，表示接下来有k行。在接下来的k行中，每行给出一个字符串。<br>  输入文件示例<br>  input.txt<br>  2<br>  a<br>  b</p></blockquote><h4 id="1-1-3-数据输出"><a href="#1-1-3-数据输出" class="headerlink" title="1.1.3 数据输出"></a>1.1.3 数据输出</h4><blockquote><p>  将计算结果输出到文件output.txt中。文件共有k行，每行对应于一个字符串的编码。<br>  输出文件示例<br>  output.txt<br>  1<br>  2</p></blockquote><h4 id="1-1-4-示例代码"><a href="#1-1-4-示例代码" class="headerlink" title="1.1.4 示例代码"></a>1.1.4 示例代码</h4><details><summary><mark><font color="darkred">查看代码</font></mark></summary><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DictionarySequence</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String [] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> FileReader(<span class="string">"dictionary_input.txt"</span>));</span><br><span class="line">BufferedWriter bw = <span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span> FileWriter(<span class="string">"dictionary_output.txt"</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> count = Integer.parseInt(br.readLine());<span class="comment">//获取文件首行提供的行数</span></span><br><span class="line">String str = <span class="string">""</span>;</span><br><span class="line"><span class="keyword">char</span> [] s = &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> row = <span class="number">1</span>; row &lt;= count; row ++) &#123;</span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">str = br.readLine();</span><br><span class="line">s = str.toCharArray();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (s.length &gt; <span class="number">6</span>) &#123;</span><br><span class="line">bw.write(str + <span class="string">" 的长度大于6，在此不进行字典序编码。"</span>);</span><br><span class="line">bw.newLine();</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*统计长度小于str的长度的升序字符串个数*/</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; s.length; i ++)</span><br><span class="line">sum += count_allk(i);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> h = s[<span class="number">0</span>] - <span class="string">'a'</span> + <span class="number">1</span>; <span class="comment">//获取s中第一个字母</span></span><br><span class="line"><span class="comment">/*统计所有首字母小于s首字母的升序字符串个数*/</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; h; i ++)</span><br><span class="line">sum += count_iandk(i,s.length);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>,temp = h; i &lt; s.length; i ++) &#123;</span><br><span class="line"><span class="keyword">int</span> n = s[i] - <span class="string">'a'</span> + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> length = s.length - i;<span class="comment">//获取此时的长度</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = temp + <span class="number">1</span>; j &lt; n; j ++)</span><br><span class="line">sum += count_iandk(j,length);</span><br><span class="line">temp = n;</span><br><span class="line">&#125;</span><br><span class="line">bw.write(str + <span class="string">"-----&gt;"</span> + (sum + <span class="number">1</span>));</span><br><span class="line">bw.newLine();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">br.close();</span><br><span class="line">bw.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> i :字符串以第i个字符开头</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> k :字符串长度为k</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 以i开头长度为k的升序字符串的个数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">count_iandk</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (k == <span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt;= <span class="number">26</span>; j ++)</span><br><span class="line">sum += count_iandk(j,k - <span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> k字符串长度为k</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span>长度为k的升序字符串的个数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">count_allk</span> <span class="params">(<span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">26</span>; i ++) &#123;</span><br><span class="line">sum += count_iandk(i,k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details><h4 id="1-1-5-运行结果"><a href="#1-1-5-运行结果" class="headerlink" title="1.1.5 运行结果"></a>1.1.5 运行结果</h4><blockquote><p>  输入文件<br><img src="/img/algorithm/dicSeq_input.bmp" alt="input"><br>  输出文件<br><img src="/img/algorithm/dicSeq_output.bmp" alt="output"></p></blockquote></details><hr><h2 id="2-贪心算法"><a href="#2-贪心算法" class="headerlink" title="2. 贪心算法"></a><center>2. 贪心算法</center></h2><h3 id="2-1-多元Huffman编码问题"><a href="#2-1-多元Huffman编码问题" class="headerlink" title="2.1. 多元Huffman编码问题"></a>2.1. 多元Huffman编码问题</h3><details><summary><mark><font color="darkred">查看详情</font></mark></summary><h4 id="2-1-1-问题描述"><a href="#2-1-1-问题描述" class="headerlink" title="2.1.1. 问题描述"></a>2.1.1. 问题描述</h4><blockquote><p> 在一个操场的四周摆放着n堆石子。现要将石子有次序地合并成一堆。规定每次至少选2堆最多选k堆石子合并成新的一堆，合并的费用为新的一堆石子的石子数。试设计一个算法，计算出将n堆石子合并成一堆的最大总费用和最小总费用。</p></blockquote><h4 id="2-1-2-数据输入"><a href="#2-1-2-数据输入" class="headerlink" title="2.1.2. 数据输入"></a>2.1.2. 数据输入</h4><blockquote><p> 输入数据由文件input.txt给出。文件的第1行有2个正整数n和k，表示有n对石子，每次至少选择2堆最多选择k堆石子合并。<br>第2行有n个数，分别表示每堆石子的个数。<br>输入文件示例<br>input.txt<br>7 3<br>45 13 12 16 9 5 22</p></blockquote><h4 id="2-1-3-结果输出"><a href="#2-1-3-结果输出" class="headerlink" title="2.1.3. 结果输出"></a>2.1.3. 结果输出</h4><blockquote><p> 将计算结果输出到文件output.txt中。<br>输出文件示例<br>output.txt<br>593 199</p></blockquote><h4 id="2-1-4-示例代码"><a href="#2-1-4-示例代码" class="headerlink" title="2.1.4. 示例代码"></a>2.1.4. 示例代码</h4><details><summary><mark><font color="darkred">查看代码</font></mark></summary><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> MyLei</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/7/17</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DuoyuanHuffman</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> n,k;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span>[] numbers;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String [] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> FileReader(<span class="string">"E:\\IDEAProject\\algorithm\\src\\input.txt"</span>));</span><br><span class="line">        BufferedWriter bw = <span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span> FileWriter(<span class="string">"E:\\IDEAProject\\algorithm\\src\\output.txt"</span>));</span><br><span class="line">        PriorityQueue&lt;Integer&gt; minQueue;</span><br><span class="line">        PriorityQueue&lt;Integer&gt; maxQueue;</span><br><span class="line"></span><br><span class="line">        String [] str = br.readLine().split(<span class="string">" "</span>);</span><br><span class="line"></span><br><span class="line">        n = Integer.parseInt(str[<span class="number">0</span>]);</span><br><span class="line">        k = Integer.parseInt(str[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">        numbers = <span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>];</span><br><span class="line">        <span class="comment">//默认升序</span></span><br><span class="line">        minQueue = <span class="keyword">new</span> PriorityQueue&lt;&gt;(n);</span><br><span class="line">        <span class="comment">//降序</span></span><br><span class="line">        maxQueue = <span class="keyword">new</span> PriorityQueue&lt;&gt;(n, Comparator.reverseOrder());</span><br><span class="line"></span><br><span class="line">        str = br.readLine().split(<span class="string">" "</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">            numbers[i] = Integer.parseInt(str[i - <span class="number">1</span>]);</span><br><span class="line">            minQueue.add(numbers[i]);</span><br><span class="line">            maxQueue.add(numbers[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> max = getMaxValueByQueue(maxQueue);</span><br><span class="line">        <span class="keyword">int</span> min = getMinValueByQueue(minQueue);</span><br><span class="line"></span><br><span class="line">        bw.write(<span class="string">"Max: "</span>+max);</span><br><span class="line">        bw.newLine();</span><br><span class="line">        bw.write(<span class="string">"Min: "</span>+min);</span><br><span class="line"></span><br><span class="line">        br.close();</span><br><span class="line">        bw.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 每次选k堆最小的，不足补0</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> queue</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 得出k堆中最小的</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getMinValueByQueue</span><span class="params">(PriorityQueue&lt;Integer&gt; queue)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i,j,m,t,sum,z;</span><br><span class="line">        m = (k-n%(k-<span class="number">1</span>))%(k-<span class="number">1</span>);</span><br><span class="line">        <span class="comment">//补0</span></span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">1</span>,t=<span class="number">0</span>; i&lt;=k-m; i++)&#123;</span><br><span class="line">            t += queue.poll();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        sum = t;</span><br><span class="line">        z = (n-k+m)/(k-<span class="number">1</span>);</span><br><span class="line">        queue.add(t);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">1</span>; i&lt;=z; i++)&#123;</span><br><span class="line">            <span class="comment">//每次选k堆最小的</span></span><br><span class="line">            <span class="keyword">for</span>(j=<span class="number">1</span>,t=<span class="number">0</span>; j&lt;=k; j++) &#123;</span><br><span class="line">                t += queue.poll();</span><br><span class="line">            &#125;</span><br><span class="line">            sum += t;</span><br><span class="line">            queue.add(t);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 每次选2堆最大的</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> queue</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 2堆最大的和</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getMaxValueByQueue</span><span class="params">(PriorityQueue&lt;Integer&gt; queue)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>,temp;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n-<span class="number">1</span>; i++)&#123;</span><br><span class="line">            temp = queue.poll() + queue.poll();</span><br><span class="line">            sum += temp;</span><br><span class="line">            queue.add(temp);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details><h4 id="2-1-5-运行结果"><a href="#2-1-5-运行结果" class="headerlink" title="2.1.5. 运行结果"></a>2.1.5. 运行结果</h4><blockquote><p>  输入文件<br><img src="/img/algorithm/huffman_input.bmp" alt="input"><br>  输出文件<br><img src="/img/algorithm/huffman_output.bmp" alt="output"></p></blockquote></details><hr><h2 id="3-动态规划"><a href="#3-动态规划" class="headerlink" title="3. 动态规划"></a><center>3. 动态规划</center></h2><h2 id="4-回溯法"><a href="#4-回溯法" class="headerlink" title="4. 回溯法"></a><center>4. 回溯法</center></h2><h2 id="5-分支限界法"><a href="#5-分支限界法" class="headerlink" title="5. 分支限界法"></a><center>5. 分支限界法</center></h2><h2 id="6-随机化算法"><a href="#6-随机化算法" class="headerlink" title="6. 随机化算法"></a><center>6. 随机化算法</center></h2><h2 id="7-线性规划与网络流"><a href="#7-线性规划与网络流" class="headerlink" title="7. 线性规划与网络流"></a><center>7. 线性规划与网络流</center></h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Spring学习笔记&lt;持续更新中&gt;</title>
      <link href="/2019/07/16/spring/"/>
      <url>/2019/07/16/spring/</url>
      
        <content type="html"><![CDATA[<h1 id="1-Spring学习路线"><a href="#1-Spring学习路线" class="headerlink" title="1. Spring学习路线"></a><center>1. Spring学习路线</center></h1><blockquote><h3 id="1-Spring的概述、Spring-IOC-xml-、Spring的Bean管理、Spring属性注入"><a href="#1-Spring的概述、Spring-IOC-xml-、Spring的Bean管理、Spring属性注入" class="headerlink" title="1. Spring的概述、Spring IOC(xml)、Spring的Bean管理、Spring属性注入"></a>1. Spring的概述、Spring IOC(xml)、Spring的Bean管理、Spring属性注入</h3><h3 id="2-Spring-IOC的注解方式、Spring-AOP-xml"><a href="#2-Spring-IOC的注解方式、Spring-AOP-xml" class="headerlink" title="2. Spring IOC的注解方式、Spring AOP(xml)"></a>2. Spring IOC的注解方式、Spring AOP(xml)</h3><h3 id="3-Spring-AOP的注解开发、Spring事务、JdbcTemplate"><a href="#3-Spring-AOP的注解开发、Spring事务、JdbcTemplate" class="headerlink" title="3. Spring AOP的注解开发、Spring事务、JdbcTemplate"></a>3. Spring AOP的注解开发、Spring事务、JdbcTemplate</h3></blockquote><a id="more"></a><h2 id="1-1-Spring的概述"><a href="#1-1-Spring的概述" class="headerlink" title="1.1. Spring的概述"></a>1.1. Spring的概述</h2><h3 id="1-1-1-什么是Spring"><a href="#1-1-1-什么是Spring" class="headerlink" title="1.1.1. 什么是Spring"></a>1.1.1. 什么是Spring</h3><blockquote><p>先来看看百度百科给出的解释</p></blockquote><p><img src="/img/springDesc.png" alt="spring简介"></p><blockquote><p>简单总结一下<br>  Spring:SE/EE开发的<strong>一站式</strong>框架<br>  Spring具有EE开发的每一层的解决方案<br>  &emsp;&emsp;Web层：SpringMVC<br>  &emsp;&emsp;Service层：Spring的Bean管理、Spring的事务<br>  &emsp;&emsp;Dao层：Spring的Jdbc模板、Spring的ORM模块</p></blockquote><hr><h3 id="1-1-2-Spring的优点"><a href="#1-1-2-Spring的优点" class="headerlink" title="1.1.2. Spring的优点"></a>1.1.2. Spring的优点</h3><blockquote><ol><li>Java EE更加容易使用</li><li>面向对象的设计比任何实现技术(比如Java EE)都重要</li><li>面向接口编程，而不是针对类编程。Spring将使用接口的复杂度降低到零。（面向接口编程有哪些复杂度？）</li><li>代码应该易于测试。Spring框架会帮助你，使代码的测试更加简单</li><li>JavaBean提供了应用程序配置的最好方法</li><li>在Java中，已检查异常（Checked exception）被过度使用。框架不应该迫使你捕获不能恢复的异常</li></ol></blockquote><h2 id="1-2-Spring-IOC-xml"><a href="#1-2-Spring-IOC-xml" class="headerlink" title="1.2. Spring IOC(xml)"></a>1.2. Spring IOC(xml)</h2><h3 id="1-2-1-什么是IOC"><a href="#1-2-1-什么是IOC" class="headerlink" title="1.2.1. 什么是IOC?"></a>1.2.1. 什么是IOC?</h3><blockquote><p>  IOC:Inversion of control 控制反转 <br>简单来说，就是将对象的创建权“反转”给Spring，即让Spring进行对象(也就是Bean)的管理</p></blockquote><h3 id="1-2-2-IOC的底层原理简介"><a href="#1-2-2-IOC的底层原理简介" class="headerlink" title="1.2.2. IOC的底层原理简介"></a>1.2.2. IOC的底层原理简介</h3><p><img src="/img/IOC.bmp" alt="IOC"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>最大间隙问题</title>
      <link href="/2019/07/15/Maxgap/"/>
      <url>/2019/07/15/Maxgap/</url>
      
        <content type="html"><![CDATA[<h2 id="最大间隙问题"><a href="#最大间隙问题" class="headerlink" title="最大间隙问题"></a>最大间隙问题</h2><h3 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h3><blockquote><p>   给定n个实数x1,x2,…,xn,求这n个数在实轴相邻2个数之间的最大差值。假设对任何实数的下取整函数耗时O(1)，设计解最大间隙问题的线性时间算法。</p></blockquote><a id="more"></a><h3 id="算法设计："><a href="#算法设计：" class="headerlink" title="算法设计："></a>算法设计：</h3><blockquote><p>   对于给定的n个实数x1,x2,…,xn，计算他们的最大间隙。</p></blockquote><h3 id="数据输入"><a href="#数据输入" class="headerlink" title="数据输入"></a>数据输入</h3><blockquote><p>  输入数据由文件名为input.txt的文本文件提供。文件的第一行有1个正整数n。接下来的接下来的1行中有n个实数x1,x2,…,xn。</p></blockquote><blockquote><p>   输入文件示例<br>   input.txt<br>   5<br>   2.3 3.1 7.5 1.5 6.3</p></blockquote><h3 id="结果输出"><a href="#结果输出" class="headerlink" title="结果输出"></a>结果输出</h3><blockquote><p>  将找到的最大间隙输出</p></blockquote><blockquote><p>  输出文件示例<br>  output.txt<br>  3.2</p></blockquote><h3 id="分析与解答："><a href="#分析与解答：" class="headerlink" title="分析与解答："></a>分析与解答：</h3><blockquote><p>   用鸽舍原理设计最大间隙问题的线性时间算法如下。</p></blockquote><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">double</span> maxgap(<span class="keyword">int</span> n,<span class="keyword">double</span> *x) &#123;</span><br><span class="line">    <span class="keyword">double</span> minx = x[mini(n,x)],maxx = x[maxi(n,x)];</span><br><span class="line">    <span class="comment">/* 用n-2个等间距的点分割区间[minx,maxx],产生n-1个桶，每个桶i中用high[i]和low[i]分别存储分配给桶i的数中的最大数和最小数 */</span></span><br><span class="line">    <span class="keyword">int</span> *<span class="keyword">count</span> = <span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">double</span> *low = <span class="keyword">new</span> <span class="keyword">double</span>[n+<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">double</span> *high = <span class="keyword">new</span> <span class="keyword">double</span>[n+<span class="number">1</span>];</span><br><span class="line">    <span class="comment">//桶初始化</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n - <span class="number">1</span>; i ++) &#123;</span><br><span class="line">        <span class="keyword">count</span>[i] = <span class="number">0</span>;</span><br><span class="line">        low[i] = maxx;</span><br><span class="line">        high[i] = minx;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//将n个数置于n-1个桶中</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) &#123;</span><br><span class="line">        <span class="keyword">int</span> bucket = <span class="keyword">int</span>((n<span class="number">-1</span>) * (x[i] - minx) / (maxx - minx)) + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">count</span>[bucket] ++;</span><br><span class="line">        <span class="keyword">if</span> (x[i] &lt; low[bucket] &lt; low[bucket])</span><br><span class="line">            low[bucket] = x[i];</span><br><span class="line">        <span class="keyword">if</span> (x[i] &gt; high[bucket])</span><br><span class="line">            high[bucket] = x[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* 此时，除了maxx和minx外的n-2个数被置于n-1个桶中，由鸽舍原理可知，至少有一个桶是空的，这意味着最大间隙不会出现在同一个桶中的两个数之间，对每一个桶做一次线性扫描即可找出最大间隙 */</span></span><br><span class="line">    <span class="keyword">double</span> tmp = <span class="number">0</span>,left = high[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n - <span class="number">1</span>; i ++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">count</span>[i]) &#123;</span><br><span class="line">            <span class="keyword">double</span> thisgap = low[i] - left;</span><br><span class="line">            <span class="keyword">if</span> (thisgap &gt; tmp)</span><br><span class="line">                tmp = thisgap;</span><br><span class="line">            left = high[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> tmp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><blockquote><p>   其中，mini和maxi分别计算数组中最小元素和最大元素的下标。</p></blockquote><hr><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">template&lt;class T&gt;</span><br><span class="line">int mini(int n,T *x) &#123;</span><br><span class="line">    T = tmp = x[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span> (int <span class="built_in">i</span> = <span class="number">1</span>,k = <span class="number">1</span>; <span class="built_in">i</span> &lt;= n; <span class="built_in">i</span> ++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (x[<span class="built_in">i</span>] &lt; tmp) &#123;</span><br><span class="line">            tmp = x[<span class="built_in">i</span>];</span><br><span class="line">            k = <span class="built_in">i</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> k;</span><br><span class="line">&#125;</span><br><span class="line">template&lt;class T&gt;</span><br><span class="line">int maxi(int n,T *x) &#123;</span><br><span class="line">    T tmp = x[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span> (int <span class="built_in">i</span> = <span class="number">1</span>,k = <span class="number">1</span>; <span class="built_in">i</span> &lt;= n; <span class="built_in">i</span> ++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (x[<span class="built_in">i</span>] &gt; tmp) &#123;</span><br><span class="line">            tmp = x[<span class="built_in">i</span>];</span><br><span class="line">            k = <span class="built_in">i</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> k;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><blockquote><p>   由于下取整函数耗时O(1)，故循环体内的运算耗时O(1)。因此，整个算法耗时O(n)。即算法maxgap是求最大间隙问题的线性时间算法。注意到在代数判定树计算模型下，Ω(nlogn)是最大间隙问题的一个计算时间下界。这意味着在代数判定树的计算模型下，最大间隙问题是不可能有线性时间算法的。在此题中假设下取整函数耗时O(1)，实际上这可以看作是在代数判定树模型中，将下取整运算作为基本运算增加到原有的基本运算集中，从而使代数判定树计算模型的计算能力得到增强。因而可以在线性时间内解最大间隙问题。</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
